package mouserun.game;

public class GameController {

    private Maze maze;
    private int gridSize;

    /**
     * Creates an instance of the controller.
     *
     * @param adapter The adapter that is responsible for picking up events from
     * the controller and manipulate the game interface.
     * @param width The number of horizontal grids.
     * @param height The number of vertical grids.
     * @param gridSize The width and height of each cell.
     */
    public GameController(int width, int height, int gridSize) {

        this.maze = new Maze(width, height);
        this.gridSize = gridSize;

    }

    /**
     * Retrieve the maze that was generated by the controller.
     *
     * @return The Maze of the game.
     */
    public Maze getMaze() {
        return this.maze;
    }

    /**
     * Causes the game to begin. This will load all instances of Mouse call that
     * conforms to the game set and signal the adapter to prepare for the game
     * to begin.
     */
    public void start() {

    }

    /**
     * Gets the actual X-axis on the game interface given the maze X-axis value.
     *
     * @param x The X-axis value on the maze.
     * @return The X-axis value on the game interface
     */
    public int getGridLeft(int x) {
        return x * gridSize;
    }

    /**
     * Gets the actual Y-axis on the game interface given the maze Y-axis value.
     *
     * @param y The Y-axis value on the maze.
     * @return The Y-axis value on the game interface.
     */
    public int getGridTop(int y) {
        return (maze.getHeight() - y - 1) * gridSize;
    }

}
